#tag ClassProtected Class AppInherits ConsoleApplication	#tag Event		Function Run(args() as String) As Integer		  Dim im, im2 As gdImage		  Dim s As String		  Dim f As FolderItem		  Dim black, white, red, blue, green, pts(-1) As Integer		  Dim x1, y1, x2, y2 As Integer		  Dim FontRef As MemoryBlock		  		  f=GetFolderItem("").Parent()		  s=f.ShellPath		  s="/tmp/"		  Print s		  		  im=new gdImage(128, 128, False)		  Print Str(im.Width)+"x"+Str(im.Height)		  		  white=im.ColorAllocate(255, 255, 255)		  black=im.ColorAllocate(0,0,0)		  red=im.ColorAllocate(255, 0, 0)		  blue=im.ColorAllocate(0, 0, 255)		  green=im.ColorAllocate(0, 255, 0)		  		  im.SetAntiAliased(red)		  im.Line(128, 0, 0, 128, red)		  		  im.SetThickness(7)		  im.Line(0,0,128,128, black)		  		  im.SetThickness(2)		  pts.Append 10		  pts.Append 10		  pts.Append 110		  pts.Append 10		  pts.Append 110		  pts.Append 110		  pts.Append 50		  pts.Append 60		  		  im.FilledPolygon(pts, blue)		  im.Polygon(pts, red)		  im.Rectangle(0,0,127,127,black)		  im.Arc(63,63,32,32,0,180,green)		  im.FilledArc(63,63,32,32,160,20,green, gdEdged)		  im.FillToBorder(64,64,green, red)		  im.Fill(1,64,black)		  		  im2=new gdImage(640, 480, False)		  green=im2.ColorAllocate(0, 255, 0)		  isBoundSafe(im2, 120, 120)		  isBoundSafe(im2, 1200, 1200)		  		  im2.SetClip(10, 11, 630, 470)		  FontRef=im2.GetLargeFont()		  im.Char(FontRef, 10, 100, "@", red)		  FontRef=im2.GetGiantFont()		  im.Char(FontRef, 20, 100, "#", blue)		  im.DrawString(FontRef, 35, 30, "tagada!", white)		  'im.DrawStringFT("Tagada! 中文", white, "/Library/Fonts/Arial.ttf", 10, 0, 20, 30)		  im2.SetTile(im)		  im2.FilledRectangle(0,0,640,480, gdTiled)		  im2.GetClip(x1, y1, x2, y2)		  Print "Clip: "+Str(x1)+","+Str(y1)+" -- "+Str(x2)+","+Str(y2)		  		  		  im2.SaveAsJpeg("/tmp/im2.jpg", 255)		  im.SaveAsJpeg("/tmp/im.jpg", 255)		  		  BuildFontDict()		  		End Function	#tag EndEvent	#tag Event		Function UnhandledException(error As RuntimeException) As Boolean		  Print ""		  Print "Error #"+Str(error.ErrorNumber)		  print error.Message		  		End Function	#tag EndEvent	#tag Method, Flags = &h0		Sub isBoundSafe(im As gdImage, x As Integer, y As Integer)		  if im.BoundsSafe(x,y) Then		    Print Str(x)+","+Str(y)+" is bounds safe"		  else		    Print Str(x)+","+Str(y)+" is not bounds safe"		  end if		  		End Sub	#tag EndMethod	#tag ViewBehavior	#tag EndViewBehaviorEnd Class#tag EndClass